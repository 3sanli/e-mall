<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.showtan.dao.ProductMapper">
    <resultMap id="productMap" type="Product">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="productCategoryId" property="productCategoryId" jdbcType="INTEGER"/>
        <result column="price" property="price" jdbcType="BIGINT"/>
        <result column="introduction" property="introduction" jdbcType="VARCHAR"/>
        <result column="creatorId" property="creatorId" jdbcType="INTEGER"/>
        <result column="creatorName" property="creatorName" jdbcType="VARCHAR"/>
        <result column="createdTime" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="countAll" resultType="Long">
        SELECT COUNT(*) FROM Product
        <where>
            <if test="name != null">
                AND name LIKE '%${name}%'
            </if>
            <if test="productCategoryId != null">
                AND productCategoryId = #{productCategoryId}
            </if>
            <if test="creatorId == null">

            </if>
            <if test="creatorId != null">
                creatorId = #{creatorId}
                AND status != 'SOLD'
            </if>
            <if test="creatorId == null">
                AND status = 'RELEASING'
            </if>
        </where>
    </select>

    <select id="search" resultMap="productMap">
        SELECT * FROM Product
        <where>
            <if test="criteria.name != null and criteria.name != ''">
                AND name LIKE '%${criteria.name}%'
            </if>
            <if test="criteria.productCategoryId != null">
                AND productCategoryId = #{criteria.productCategoryId}
            </if>
            <if test="criteria.creatorId != null">
                creatorId = #{criteria.creatorId}
                AND status != 'SOLD'
            </if>
            <if test="criteria.creatorId == null">
                AND status = 'RELEASING'
            </if>
        </where>
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="criteria.priceCriteria == 0">
                price ASC ,
            </if>
            <if test="criteria.priceCriteria == 1">
                price DESC ,
            </if>
            <if test="criteria.creditCriteria == 0">
                credit ASC ,
            </if>
            <if test="criteria.creditCriteria == 1">
                credit DESC ,
            </if>
            createdTIme DESC ,
        </trim>
        <if test="page &gt;= 0 and pageSize &gt;= 0">
            LIMIT #{page},#{pageSize}
        </if>
    </select>

    <insert id="save">
        <selectKey resultType="Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO Product
        (name,productCategoryId,price,introduction,creatorId,creatorName)
        VALUES (#{name},#{productCategoryId},#{price},#{introduction},#{creatorId},#{creatorName})
    </insert>

    <update id="modify">
        UPDATE Product
        <trim prefix="set" suffixOverrides=",">
            <if test="name != null">
                name = #{name},
            </if>
            <if test="productCategoryId != null">
                productCategoryId = #{productCategoryId},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="introduction != null">
                introduction = #{introduction},
            </if>
            <if test="createdTime != null">
                createdTime = #{createdTime},
            </if>
        </trim>
        WHERE id = #{id}
    </update>

    <update id="updateStatus">
        UPDATE Product
        SET status = #{status}
        WHERE id = #{productId}
    </update>

    <select id="getByProductIdList" resultMap="productMap">
        SELECT * FROM Product
        <where>
            <foreach collection="list" item="product" open="id in (" separator="," close=")" index="i">
                #{product.id}
            </foreach>
        </where>
    </select>

    <select id="getById" resultMap="productMap">
        SELECT * FROM Product
        WHERE id = #{id}
    </select>

    <delete id="deleteById">
        DELETE FROM Product
        WHERE id = #{id}
    </delete>
</mapper>